<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-HIBR7078" name="Test" tests="14" failures="0" timestamp="25 Jul 2020 18:21:29 GMT" time="20.857" errors="0">
  <testcase name="@BeforeTest initialize" time="0.0" classname="Tests.validateAlert">
    <failure type="org.openqa.selenium.WebDriverException" message="Timed out waiting for driver server to start.
Build info: version: &amp;apos;4.0.0-alpha-6&amp;apos;, revision: &amp;apos;5f43a29cfc&amp;apos;
System info: host: &amp;apos;LAPTOP-HIBR7078&amp;apos;, ip: &amp;apos;192.168.10.103&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_261&amp;apos;
Driver info: driver.version: ChromeDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start.
Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'
System info: host: 'LAPTOP-HIBR7078', ip: '192.168.10.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: ChromeDriver
	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:210)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:216)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:136)
	at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:75)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:163)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:150)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:105)
	at resources.base.initializeDriver(base.java:29)
	at Tests.validateRegister.initialize(validateRegister.java:27)
Caused by: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.lang.InterruptedException
	at java.util.concurrent.CompletableFuture.reportGet(Unknown Source)
	at java.util.concurrent.CompletableFuture.get(Unknown Source)
	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:204)
	... 32 more
Caused by: java.lang.RuntimeException: java.lang.InterruptedException
	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:95)
	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:227)
	at org.openqa.selenium.remote.service.DriverService.lambda$start$0(DriverService.java:193)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.FutureTask.awaitDone(Unknown Source)
	at java.util.concurrent.FutureTask.get(Unknown Source)
	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:88)
	... 8 more
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest initialize -->
  <testcase name="@BeforeTest initialize" time="0.0" classname="Tests.validateAlert">
    <skipped/>
  </testcase> <!-- @BeforeTest initialize -->
  <testcase name="@BeforeTest initialize" time="0.0" classname="Tests.validateAlert">
    <skipped/>
  </testcase> <!-- @BeforeTest initialize -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Tests.validateAlert">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Tests.validateAlert">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Tests.validateAlert">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Tests.validateAlert">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="singleFrame" time="0.02" classname="Tests.validateFrames">
    <skipped/>
  </testcase> <!-- singleFrame -->
  <testcase name="functionality" time="0.005" classname="Tests.validateSelectable">
    <skipped/>
  </testcase> <!-- functionality -->
  <testcase name="serialize" time="0.008" classname="Tests.validateSelectable">
    <skipped/>
  </testcase> <!-- serialize -->
  <testcase name="activeDP" time="0.002" classname="Tests.validateDate">
    <skipped/>
  </testcase> <!-- activeDP -->
  <testcase name="disabledDP" time="0.002" classname="Tests.validateDate">
    <skipped/>
  </testcase> <!-- disabledDP -->
  <testcase name="AlertOKTab" time="0.002" classname="Tests.validateAlert">
    <skipped/>
  </testcase> <!-- AlertOKTab -->
  <testcase name="AlertOkandCancel" time="0.002" classname="Tests.validateAlert">
    <skipped/>
  </testcase> <!-- AlertOkandCancel -->
  <testcase name="AlertTextbox" time="0.0" classname="Tests.validateAlert">
    <skipped/>
  </testcase> <!-- AlertTextbox -->
  <testcase name="multipleWindow" time="0.002" classname="Tests.validateWindows">
    <skipped/>
  </testcase> <!-- multipleWindow -->
  <testcase name="seperateWindow" time="0.002" classname="Tests.validateWindows">
    <skipped/>
  </testcase> <!-- seperateWindow -->
  <testcase name="tabWindow" time="0.006" classname="Tests.validateWindows">
    <skipped/>
  </testcase> <!-- tabWindow -->
  <testcase name="registerInitialDetails" time="0.004" classname="Tests.validateRegister">
    <skipped/>
  </testcase> <!-- registerInitialDetails -->
  <testcase name="registerSecondaryDetails" time="0.003" classname="Tests.validateRegister">
    <skipped/>
  </testcase> <!-- registerSecondaryDetails -->
  <testcase name="userDetails" time="0.001" classname="Tests.validateRegister">
    <skipped/>
  </testcase> <!-- userDetails -->
</testsuite> <!-- Test -->
